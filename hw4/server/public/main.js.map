{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_model/Card.ts","webpack:///./src/app/_model/CardSummary.ts","webpack:///./src/app/_model/Deck.ts","webpack:///./src/app/_model/User.ts","webpack:///./src/app/_sevice/admin.service.ts","webpack:///./src/app/_sevice/login.service.ts","webpack:///./src/app/_sevice/user.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component/admin/admin.component.css","webpack:///./src/app/component/admin/admin.component.html","webpack:///./src/app/component/admin/admin.component.ts","webpack:///./src/app/component/card-detail/card-detail.component.css","webpack:///./src/app/component/card-detail/card-detail.component.html","webpack:///./src/app/component/card-detail/card-detail.component.ts","webpack:///./src/app/component/deck-detail/deck-detail.component.css","webpack:///./src/app/component/deck-detail/deck-detail.component.html","webpack:///./src/app/component/deck-detail/deck-detail.component.ts","webpack:///./src/app/component/deck-list/deck-list.component.css","webpack:///./src/app/component/deck-list/deck-list.component.html","webpack:///./src/app/component/deck-list/deck-list.component.ts","webpack:///./src/app/component/login/login.component.css","webpack:///./src/app/component/login/login.component.html","webpack:///./src/app/component/login/login.component.ts","webpack:///./src/app/component/user-cards/user-cards.component.css","webpack:///./src/app/component/user-cards/user-cards.component.html","webpack:///./src/app/component/user-cards/user-cards.component.ts","webpack:///./src/app/component/user-decks/user-decks.component.css","webpack:///./src/app/component/user-decks/user-decks.component.html","webpack:///./src/app/component/user-decks/user-decks.component.ts","webpack:///./src/app/component/user/user.component.css","webpack:///./src/app/component/user/user.component.html","webpack:///./src/app/component/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\n\nexport class Card {\n    //name, colors, type, rarity, text, power, toughness, legality, source, image and all rulings\n    name: string;\n    id: string;\n    multiverseid: string;\n    colors: [];\n    types: [];\n    rarity: string;\n    text: string;\n    power: string;\n    toughness: string;\n    legalities: [];\n    source: string;\n    imageUrl: string;\n    rulings: [];\n    manaCost: string;\n}","\nexport class CardSummary {\n\n    id: string;\n    multiverseid: string;\n    name: string;\n    qty: number;\n}","export class Deck {\n    id: string;\n    owner: string;\n    cards: [];\n    name: string;\n    description: string;\n}","export class User {\n    _id :string;\n    email: string;\n    firstName: string;\n    lastName: string;\n    enabled: boolean;\n    password: string;\n    role: string;\n    decks: [];\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { User } from '../_model/User';\nimport { LoginService } from './login.service';\n\n\nconst rootURL = 'http://localhost:3000/api/v1';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  user: User;\n  httpOptions;\n\n  constructor(\n    private http: HttpClient,\n    private loginService: LoginService\n  ) {\n    this.httpOptions = {\n      headers: new HttpHeaders({ 'X-CSRF': this.loginService.getCSRFToken() })\n    };\n  }\n\n  createUser(adminId: string, user: User): Observable<User> {\n    return this.http.post<User>(rootURL + '/admin/' + adminId + '/users', user, httpOptions);\n  }\n\n  getUsers(adminId: string, term: string): Observable<User[]> {\n    if (!term.trim()) {\n      // if not search term, return empty hero array.\n      return of([]);\n    }\n    return this.http.get<User[]>(rootURL + '/admin/' + adminId + '/users' + '/?keywords=' + term, httpOptions);\n  }\n\n  updateUser(adminId: string, userId: string, enabled: boolean): Observable<User> {\n    return this.http.put<User>(rootURL + '/admin/' + adminId + '/users/' + userId, { enabled: enabled }, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\n\nimport { Observable, of, Subject } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { User } from '../_model/User';\nimport { Router } from '@angular/router';\n\nconst rootURL = 'http://localhost:3000/api/v1';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LoginService {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  login(email: string, password: string) {\n    return this.http.post<User>(rootURL + '/login', { email: email, password: password }, {observe: 'response'});\n  }\n\n  logout() {\n    localStorage.clear();\n    return this.http.post(rootURL + '/logout', {});\n  }\n\n  setUser(user: User) {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  setCSRFToken(csrf: string) {\n    localStorage.setItem('csrf-token', csrf);\n  }\n\n  getCSRFToken() {\n    return localStorage.getItem('csrf-token');\n  }\n\n  getUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Card } from '../_model/Card'\nimport { Observable, Subject } from 'rxjs';\nimport { Deck } from '../_model/Deck';\nimport { User } from '../_model/User';\nimport { LoginService } from './login.service';\n\nconst rootURL = 'http://localhost:3000/api/v1';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n  httpOptions;\n  cards: Card[];\n  constructor(\n    private http: HttpClient,\n    private loginService: LoginService\n  ) {\n    console.log(this.loginService.getCSRFToken());\n    this.httpOptions = {\n      headers: new HttpHeaders({ 'X-CSRF': this.loginService.getCSRFToken() })\n    };\n  }\n\n\n  getCardById(userId: string, id: string): Observable<Card> {\n    return this.http.get<Card>(rootURL + '/users/' + userId + '/cards/' + id, httpOptions);\n  }\n\n  getCards(userId: string, name: string, type: string, set: string, color: string, page: number = 1): Observable<Card[]> {\n    return this.http.get<Card[]>(rootURL + '/users/' + userId + '/cards?name=' + name + '&type=' + type + '&colors=' + color + '&set=' + set + '&page=' + page, httpOptions);\n  }\n\n  getDecks(userId: string): Observable<Deck[]> {\n    return this.http.get<Deck[]>(rootURL + '/users/' + userId + '/decks', httpOptions);\n  }\n\n  createDeck(userId: string, deckName: string, description: string): Observable<Deck> {\n    let deck = new Deck();\n    deck.name = deckName;\n    deck.description = description;\n    return this.http.post<Deck>(rootURL + '/users/' + userId + '/decks', deck, httpOptions);\n  }\n\n  deleteDeck(userId: string, deckId: string) {\n    return this.http.delete(rootURL + '/users/' + userId + '/decks/' + deckId, httpOptions);\n  }\n\n  getADeck(userId: string, deckId: string): Observable<Deck> {\n    return this.http.get<Deck>(rootURL + '/users/' + userId + '/decks/' + deckId, httpOptions);\n  }\n\n  updateDeck(userId: string, deckId: string, deck: Deck): Observable<Deck> {\n    return this.http.put<Deck>(rootURL + '/users/' + userId + '/decks/' + deckId, { 'deck': deck }, httpOptions);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserComponent } from './component/user/user.component';\nimport { AdminComponent } from './component/admin/admin.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { UserDecksComponent } from './component/user-decks/user-decks.component';\nimport { UserCardsComponent } from './component/user-cards/user-cards.component';\nimport { CardDetailComponent } from './component/card-detail/card-detail.component';\nimport { DeckDetailComponent } from './component/deck-detail/deck-detail.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'user', component: UserComponent, children: [\n      {\n        path: 'decks',\n        component: UserDecksComponent,\n      },\n      {\n        path: 'cards',\n        component: UserCardsComponent,\n      }, {\n        path: 'decks/:did',\n        component: DeckDetailComponent,\n      },\n      {\n        path: '**',\n        redirectTo: 'cards',\n        pathMatch: 'full'\n      },\n    ]\n  },\n  {\n    path: 'cards/detail',\n    component: CardDetailComponent\n  },\n  { path: 'admin', component: AdminComponent },\n  { path: '**', redirectTo: '/login', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","module.exports = \".background {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    display: flex;\\n    flex-direction: column;\\n    background-image: url('background.jpg');\\n    background-color: white;\\n    flex: 1 0 auto;\\n    overflow: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsTUFBTTtJQUNOLE9BQU87SUFDUCxRQUFRO0lBQ1IsU0FBUztJQUNULGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUNBQWtEO0lBQ2xELHVCQUF1QjtJQUN2QixjQUFjO0lBQ2QsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYmFja2dyb3VuZCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdzcmMvYXNzZXRzL2JhY2tncm91bmQuanBnJyk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgZmxleDogMSAwIGF1dG87XG4gICAgb3ZlcmZsb3c6IHNjcm9sbDtcbn0iXX0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'client';\n  isBackground = true;\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { AdminComponent } from './component/admin/admin.component';\nimport { UserComponent } from './component/user/user.component';\nimport { FormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http';\nimport { CardDetailComponent } from './component/card-detail/card-detail.component';\nimport { UserDecksComponent } from './component/user-decks/user-decks.component';\nimport { UserCardsComponent } from './component/user-cards/user-cards.component';\nimport { DeckDetailComponent } from './component/deck-detail/deck-detail.component';\nimport { DeckListComponent } from './component/deck-list/deck-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    AdminComponent,\n    UserComponent,\n    CardDetailComponent,\n    UserDecksComponent,\n    UserCardsComponent,\n    DeckDetailComponent,\n    DeckListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent,]\n})\nexport class AppModule { }\n","module.exports = \".userTable{\\n    width:100%;\\n    margin-top: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50L2FkbWluL2FkbWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50L2FkbWluL2FkbWluLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXNlclRhYmxle1xuICAgIHdpZHRoOjEwMCU7XG4gICAgbWFyZ2luLXRvcDogMzBweDtcbn0iXX0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light shadow\\\">\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"[ '/admin']\\\">Magic The Gathering</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\n    aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mx-auto btn-group\\\">\\n      <button class=\\\"nav-link\\\" class=\\\"btn btn-lg \\\">Admin Console</button>\\n    </ul>\\n    <div class=\\\"my-lg-0\\\">\\n      <a *ngIf=\\\"user\\\">Admin: {{user.firstName}} {{user.lastName}} </a>\\n      <button class=\\\"btn btn-outline-secondary my-2 my-sm-0 ml-2\\\" (click)=\\\"logout()\\\">Logout</button>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"\\\">\\n    <div class=\\\"\\\">\\n        <div class=\\\"card mt-4 shadow\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"input-group mt-2\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <label class=\\\"input-group-text sameSize\\\">email</label>\\n                </div>\\n                <input [(ngModel)]=\\\"email\\\" name='email' class=\\\"form-control\\\" type=\\\"email\\\">\\n              </div>\\n              <div class=\\\"input-group mt-2\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <label class=\\\"input-group-text sameSize\\\">password</label>\\n                </div>\\n                <input [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\n              </div>\\n    \\n              <div class=\\\"mt-2\\\">\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text sameSize\\\">firstName</span>\\n                  </div>\\n                  <input [(ngModel)]=\\\"firstname\\\" name=\\\"firstname\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n    \\n                </div>\\n              </div>\\n    \\n              <div class=\\\"mt-2\\\">\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text sameSize\\\">lastName</span>\\n                  </div>\\n                  <input [(ngModel)]=\\\"lastname\\\" name=\\\"lastname\\\" class=\\\"form-control\\\" type=\\\"text\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"input-group mt-2\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text sameSize\\\">Role</span>\\n                </div>\\n                <select [(ngModel)]=\\\"selectedRole\\\" class=\\\"custom-select\\\">\\n                  <option>user</option>\\n                  <option>admin</option>\\n                </select>\\n                <span class=\\\" sameSize btn\\\">enabled</span>\\n                <input type=\\\"checkbox\\\" name=\\\"enabled\\\" [(ngModel)]=\\\"enabled\\\" class=\\\"form-control\\\">\\n              </div>\\n              <button class=\\\"btn btn-success mt-2 form-control\\\" (click)=\\\"createUser()\\\">create user</button>\\n            </div>\\n          </div>\\n\\n      <div class=\\\"input-group mt-4 shadow\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <label class=\\\"input-group-text\\\">Search:</label>\\n        </div>\\n        <select class=\\\"custom-select\\\" [(ngModel)]=\\\"statusValue\\\" (ngModelChange)=\\\"search(searchBox.value)\\\">\\n          <option value=\\\"true\\\">Enabled</option>\\n          <option value=\\\"false\\\">Disabled</option>\\n        </select>\\n        <select class=\\\"custom-select\\\" [(ngModel)]=\\\"roleValue\\\" (ngModelChange)=\\\"search(searchBox.value)\\\">\\n          <option value=\\\"user\\\">User</option>\\n          <option value=\\\"admin\\\">Admin</option>\\n        </select>\\n        <input #searchBox (input)=\\\"search(searchBox.value)\\\" placeholder=\\\"keywords\\\" class=\\\"form-control\\\" />\\n      </div>\\n      <table class=\\\"userTable table shadow\\\">\\n        <tr>\\n          <th>Id</th>\\n          <th>Email</th>\\n          <th>FirstName</th>\\n          <th>LastName</th>\\n          <th>Role</th>\\n          <th>Enabled</th>\\n          <th>Action</th>\\n        </tr>\\n        <tr *ngFor=\\\"let user of users$ | async\\\">\\n          <td>{{user._id}}</td>\\n          <td>{{user.email}}</td>\\n          <td>{{user.firstName}}</td>\\n          <td>{{user.lastName}}</td>\\n          <td>{{user.role}}</td>\\n          <td>{{user.enabled}}</td>\\n          <td>\\n            <button class=\\\"btn btn-sm btn-secondary\\\" *ngIf=\\\"user.enabled\\\" (click)=\\\"changeStatus(user,searchBox.value)\\\">Disabled</button>\\n            <button class=\\\"btn btn-sm btn-success\\\" *ngIf=\\\"!user.enabled\\\" (click)=\\\"changeStatus(user,searchBox.value)\\\">Enabled</button>\\n          </td>\\n        </tr>\\n      </table>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { LoginService } from 'src/app/_sevice/login.service';\nimport { User } from 'src/app/_model/User';\nimport { AdminService } from '../../_sevice/admin.service'\nimport { Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, filter, map } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\n\nexport class AdminComponent implements OnInit {\n  users$: Observable<User[]>;\n  private searchTerms = new Subject<string>();\n  @Input() email: string; firstname: string; password: string; lastname: string; selectedRole: string; enabled: boolean = false; statusValue: string = 'true'; roleValue: string = 'user';\n  user: User;\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  constructor(\n    private loginService: LoginService,\n    private router: Router,\n    private adminService: AdminService,\n  ) {\n    let user : User= this.loginService.getUser();\n    if (user && user.role == 'admin') {\n      this.user = user;\n    } else {\n      this.router.navigate(['/login']);\n      return;\n    }\n  }\n\n  ngOnInit() {\n\n    this.users$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // // ignore new term if same as previous term\n      // distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.adminService.getUsers(this.user._id, term).pipe(\n        map(arr =>\n          arr.filter(user => {\n            return user.role == this.roleValue && user.enabled == (this.statusValue == 'true');\n          })\n        )\n      )),\n    );\n  }\n\n  logout() {\n    this.loginService.logout().subscribe(\n      data => {\n        //successfully logged out.\n        //delete local storage\n        this.router.navigate(['/login']);\n      },\n      error => {\n        if (error) {\n          //some error happened.\n          this.router.navigate(['/login']);\n        }\n      });\n  }\n\n  createUser() {\n    console.log('email ' + this.email + ',name: ' + this.firstname + this.lastname + \", password: \" + this.password + \", role:\" + this.selectedRole + \", enabled: \" + this.enabled)\n    let user: User = new User();\n    user.email = this.email;\n    user.password = this.password;\n    user.enabled = this.enabled;\n    user.firstName = this.firstname;\n    user.lastName = this.lastname;\n    user.role = this.selectedRole;\n    console.log(user);\n\n    this.adminService.createUser(this.user._id, user).subscribe(\n      data => {\n        if (data) {\n          console.log(\"success\" + data);\n        }\n      },\n      err => {\n        if (err) {\n          console.log('err:' + err)\n        }\n      });\n  }\n\n  changeStatus(user: User, searchValue: string) {\n    let newStatus = !user.enabled;\n    this.adminService.updateUser(this.user._id, user._id, newStatus).subscribe(user => {\n      this.search(searchValue);\n    });\n  }\n}\n","module.exports = \".card {\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50L2NhcmQtZGV0YWlsL2NhcmQtZGV0YWlsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw0RUFBNEU7QUFDaEYiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnQvY2FyZC1kZXRhaWwvY2FyZC1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgNnB4IDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTkpO1xufSJdfQ== */\"","module.exports = \"<div class=\\\"card mt-4\\\" style=\\\"width: 18rem;\\\" *ngIf=\\\"card && visible\\\">\\n    <img [src]=\\\"card.imageUrl\\\">\\n    <div class=\\\"card-body\\\">\\n        <h4 class=\\\"card-title\\\">{{card.name}}</h4>\\n        <p>multiverseid: {{card.multiverseid}}</p>\\n        <small>\\n            <strong>colors:</strong> {{card.colors}}\\n            <br> <strong>type:</strong> {{card.type}}\\n            <br> <strong>rarity:</strong> {{card.rarity}}\\n            <br> <strong>power:</strong> {{card.power}}\\n            <br> <strong>toughness:</strong> {{card.toughness}}\\n            <br> <strong>legalities:</strong>\\n            <div *ngFor=\\\"let one of card.legalities\\\">\\n                format:{{one.format}}, legality: {{one.legality}}\\n                <br>\\n            </div>\\n            <br>\\n            <strong>rulings:</strong>\\n            <div *ngFor=\\\"let one of card.rulings\\\">\\n                date:{{one.date}}, text: {{one.text}}\\n                <br>\\n            </div>\\n            <br> <strong>set:</strong> {{card.set}}\\n        </small>\\n        <p class=\\\"card-text mt-2\\\">\\n            <strong>text:</strong>\\n            <br>\\n            {{card.text}}\\n        </p>\\n    </div>\\n</div>\\n\\n<div *ngIf=\\\"selectedCardId &&!visible\\\" class=\\\"text-center mt-4\\\">\\n    <div class=\\\"spinner-grow text-info\\\" role=\\\"status\\\" style=\\\"width: 3rem; height: 3rem;\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n</div>\"","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Card } from 'src/app/_model/Card';\nimport { UserService } from 'src/app/_sevice/user.service';\nimport { User } from 'src/app/_model/User';\nimport { LoginService } from 'src/app/_sevice/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-card-detail',\n  templateUrl: './card-detail.component.html',\n  styleUrls: ['./card-detail.component.css']\n})\n\nexport class CardDetailComponent implements OnInit {\n  @Input() selectedCardId: string;\n  card: Card = null;\n  user: User = null;\n  visible: boolean = true;\n\n  constructor(\n    private userService: UserService,\n    private loginService: LoginService,\n    private router: Router\n  ) {\n    let user : User= this.loginService.getUser();\n    if (user && user.role == 'user') {\n      this.user = user;\n    } else {\n      this.router.navigate(['/login']);\n      return;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n    this.visible = false;\n    this.refreshCard();\n  }\n\n  refreshCard() {\n    // console.log(this.user);\n    this.userService.getCardById(this.user._id, this.selectedCardId).subscribe(card => {\n      this.card = card;\n      this.visible = true;\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9kZWNrLWRldGFpbC9kZWNrLWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container mt-5\\\" *ngIf=\\\"deck\\\">\\n  <div class=\\\"row mt-3\\\">\\n    <div class=\\\"col-8\\\">\\n      <button [routerLink]=\\\"[ '/user/decks']\\\" class=\\\"btn btn-info btn-sm\\\">Back</button>\\n      <div class=\\\"input-group input-group-lg mt-3\\\" style=\\\"width:50%\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text\\\">Deck Name: </div>\\n        </div>\\n        <input [(ngModel)]=\\\"deckName\\\" type=\\\"text\\\" class=\\\"form-control\\\" (ngModelChange)='changeDeck()'>\\n      </div>\\n      <h5 class=\\\"mt-2\\\">Description</h5>\\n      <input [(ngModel)]=\\\"deckDescription\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"height:100px;\\\"\\n        (ngModelChange)='changeDeck()' />\\n\\n      <button class=\\\"btn btn-primary mt-2\\\" [disabled]='!changed' (click)=\\\"updateDeck()\\\">Save Changes</button>\\n      <br>\\n      <small *ngIf=\\\"nameError\\\" class=\\\"text-danger\\\">{{nameError}}</small>\\n      <hr>\\n      <h5 class=\\\"mt-2\\\">Cards</h5>\\n      <p *ngIf=\\\"!cardSummary\\\">no card in this deck, you can add cards from <a [routerLink]=\\\"[ '/user/cards']\\\">cards\\n          page</a>\\n      </p>\\n\\n      <table class=\\\"table table-striped mt-2\\\" *ngIf=\\\"cardSummary\\\">\\n        <thead class=\\\"table-secondary\\\">\\n          <tr>\\n            <th>Name</th>\\n            <th>Quantity</th>\\n            <th>Action</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let card of cardSummary\\\">\\n            <td (click)=\\\"selectedCardId = card.multiverseid\\\">{{card.name}}</td>\\n            <td>{{card.qty}}</td>\\n            <td>\\n              <div class=\\\"btn-group\\\">\\n                <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"changeQty(card)\\\">Change Qty</button>\\n                <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteCard(card)\\\">Delete</button>\\n              </div>\\n\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <div class=\\\"col\\\">\\n      <app-card-detail *ngIf=\\\"selectedCardId\\\" [selectedCardId]=\\\"selectedCardId\\\"></app-card-detail>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { Deck } from 'src/app/_model/Deck';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from 'src/app/_sevice/user.service';\nimport { User } from 'src/app/_model/User';\nimport { LoginService } from 'src/app/_sevice/login.service';\nimport { CardSummary } from 'src/app/_model/CardSummary';\nimport { Card } from 'src/app/_model/Card';\n\n@Component({\n  selector: 'app-deck-detail',\n  templateUrl: './deck-detail.component.html',\n  styleUrls: ['./deck-detail.component.css']\n})\nexport class DeckDetailComponent implements OnInit {\n  @Input() deckName: string; deckDescription: string;\n  deck: Deck = null;\n  deckId: string = null;\n  user: User;\n  changed: boolean = false;\n  nameError: string = null;\n  cardSummary: CardSummary[] = null;\n\n  constructor(\n    private activatedRouter: ActivatedRoute,\n    private userService: UserService,\n    private loginService: LoginService,\n    private router: Router\n  ) {\n    let user : User= this.loginService.getUser();\n    if (user && user.role == 'user') {\n      this.user = user;\n    } else {\n      this.router.navigate(['/login']);\n      return;\n    }\n    this.activatedRouter.params.subscribe(params => {\n      this.deckId = params['did'];\n      this.getDeck();\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  changeDeck(): void {\n    this.nameError = null;\n    if (this.deckName === '') {\n      this.changed = false;\n      this.nameError = '* empty name is not accepted';\n      return;\n    }\n    if (this.deck.name !== this.deckName || this.deck.description !== this.deckDescription) {\n      this.changed = true;\n      this.userService.getDecks(this.user._id).subscribe(\n        decks => {\n          for (let i = 0; i < decks.length; i++) {\n            if (decks[i].id != this.deckId && decks[i].name === this.deckName) {\n              this.nameError = '* the name you created already exists';\n              this.changed = false;\n              return;\n            }\n            this.nameError = null;\n          }\n        });\n    } else {\n      this.changed = false;\n    }\n  }\n\n  getDeck() {\n    this.userService.getADeck(this.user._id, this.deckId).subscribe(deck => {\n      this.deck = deck;\n      this.deckName = deck.name;\n      this.deckDescription = deck.description;\n      this.cardSummary = deck.cards;\n    });\n  }\n\n  deleteCard(card: CardSummary) {\n    let r = confirm(\"Are you sure to delete this card from that deck?\");\n    if (r == true) {\n      //remove this element.\n      let index = this.cardSummary.indexOf(card);\n\n      this.cardSummary.splice(index, 1);\n      this.userService.updateDeck(this.user._id, this.deck.id, this.deck).subscribe(\n        deck => {\n          this.getDeck();\n          this.changed = false;\n        }\n      );\n    }\n\n  }\n\n  changeQty(card: CardSummary) {\n    let newQtyPro = prompt(\"Please enter your new quantity\", '');\n    let newQty = parseInt(newQtyPro);\n\n    if (!newQty || newQty <= 0) {\n    } else {\n      card.qty = newQty;\n      //save this change\n      this.userService.updateDeck(this.user._id, this.deck.id, this.deck).subscribe(\n        deck => {\n          this.getDeck();\n          this.changed = false;\n        }\n      );\n    }\n  }\n\n  updateDeck() {\n    //get current deck\n    this.deck.name = this.deckName;\n    this.deck.description = this.deckDescription;\n    this.userService.updateDeck(this.user._id, this.deck.id, this.deck).subscribe(\n      deck => {\n        this.getDeck();\n        this.changed = false;\n      }\n    );\n  }\n}\n","module.exports = \".card {\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n}\\n\\n.sameSize{\\n    width:80px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50L2RlY2stbGlzdC9kZWNrLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDRFQUE0RTtBQUNoRjs7QUFFQTtJQUNJLFVBQVU7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9kZWNrLWxpc3QvZGVjay1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCB7XG4gICAgYm94LXNoYWRvdzogMCA0cHggOHB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpLCAwIDZweCAyMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjE5KTtcbn1cblxuLnNhbWVTaXple1xuICAgIHdpZHRoOjgwcHg7XG59Il19 */\"","module.exports = \"<div class=\\\"mt-2 card\\\">\\n  <div class=\\\" card-body\\\">\\n    <h5 *ngIf=\\\"selectedCard\\\">Add {{selectedCard.name}} to: </h5>\\n    <div class=\\\"input-group mt-2\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <label class=\\\"input-group-text sameSize\\\">Deck</label>\\n      </div>\\n      <select placeholder=\\\"Decks\\\" [(ngModel)]=\\\"selectedDeckId\\\" name=\\\"deck\\\" class=\\\"custom-select\\\"\\n        (ngModelChange)='updateStatus()'>\\n        <option *ngFor=\\\"let deck of decks\\\" [value]=\\\"deck.id\\\">\\n          {{deck.name}}\\n        </option>\\n      </select>\\n    </div>\\n    <div class=\\\"input-group mt-2\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <label class=\\\"input-group-text sameSize\\\">Quantity</label>\\n      </div>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"quantity\\\"\\n        [disabled]='!validAdd' />\\n    </div>\\n    <button class=\\\"btn btn-sm btn-success form-control mt-2\\\" (click)=\\\"addCardToDeck()\\\"\\n      [disabled]='!validAdd'>Add</button>\\n    <small class=\\\"text-danger\\\" *ngIf=\\\"validError\\\">{{validError}}</small>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, SimpleChanges } from '@angular/core';\nimport { User } from 'src/app/_model/User';\nimport { UserService } from 'src/app/_sevice/user.service';\nimport { LoginService } from 'src/app/_sevice/login.service';\nimport { Router } from '@angular/router';\nimport { Deck } from 'src/app/_model/Deck';\nimport { Card } from 'src/app/_model/Card';\nimport { CardSummary } from 'src/app/_model/CardSummary';\n\n@Component({\n  selector: 'app-deck-list',\n  templateUrl: './deck-list.component.html',\n  styleUrls: ['./deck-list.component.css']\n})\nexport class DeckListComponent implements OnInit {\n\n  @Input() selectedCard: Card; selectedDeckId; quantity: number;\n  user: User;\n  decks: Deck[];\n  validAdd: boolean = false;\n  validError: string = '* choose a deck to add';\n\n  constructor(\n    private userService: UserService,\n    private loginService: LoginService,\n    private router: Router\n  ) {\n    let user : User= this.loginService.getUser();\n    if (user && user.role == 'user') {\n      this.user = user;\n    } else {\n      this.router.navigate(['/login']);\n      return;\n    }\n    this.userService.getDecks(this.user._id).subscribe(decks => this.decks = decks);\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n    // this.validAdd = false;\n    // this.validError = '* choose a deck to add';\n    this.userService.getDecks(this.user._id).subscribe(decks => {\n      this.decks = decks;\n      this.updateStatus();\n    }\n    );\n\n  }\n\n  addCardToDeck() {\n    if (!this.quantity || this.quantity <= 0) {\n      alert('please give a positive quantity number!');\n      return;\n    }\n\n    let cardSummary = new CardSummary();\n    cardSummary.name = this.selectedCard.name;\n    cardSummary.id = this.selectedCard.id;\n    cardSummary.multiverseid = this.selectedCard.multiverseid;\n    cardSummary.qty = this.quantity;\n\n    //find deck\n    let currentDeck = null;\n    for (let i = 0; i < this.decks.length; i++) {\n      if (this.decks[i].id === this.selectedDeckId) {\n        currentDeck = this.decks[i];\n      }\n    }\n\n    //push data into this deck and update.\n    currentDeck.cards.push(cardSummary);\n    console.log(currentDeck);\n    this.userService.updateDeck(this.user._id, this.selectedDeckId, currentDeck).subscribe(\n      deck => {\n        this.userService.getDecks(this.user._id).subscribe(decks => this.decks = decks);\n        this.updateStatus();\n        alert('Add to the deck successfully!');\n      }\n    );\n  }\n\n  updateStatus() {\n    // this.selectedDeckId;\n    // this.selectedCard;\n    let selectedDeckCards: CardSummary[] = null;\n    for (let i = 0; i < this.decks.length; i++) {\n      if (this.decks[i].id == this.selectedDeckId) {\n        selectedDeckCards = this.decks[i].cards;\n      }\n    }\n\n    // find the card in this deck and check the validation\n    for (let i = 0; i < selectedDeckCards.length; i++) {\n      if (selectedDeckCards[i].id == this.selectedCard.id) {\n        this.validAdd = false;\n        this.validError = '* the card is already in this deck'\n        return;\n      }\n    }\n    this.validAdd = true;\n    this.validError = null;\n  }\n}\n","module.exports = \"#loginForm {\\n    height: 220px;\\n    width: 30%;\\n}\\n\\n.loginBg{\\n    margin-top: 200px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50L2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsVUFBVTtBQUNkOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50L2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbG9naW5Gb3JtIHtcbiAgICBoZWlnaHQ6IDIyMHB4O1xuICAgIHdpZHRoOiAzMCU7XG59XG5cbi5sb2dpbkJne1xuICAgIG1hcmdpbi10b3A6IDIwMHB4O1xufVxuIl19 */\"","module.exports = \"<div class=\\\"loginBg\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"mx-auto\\\">\\n            <div class=\\\"mx-auto\\\" id=\\\"login_info\\\">\\n                <h4 class=\\\"mx-auto text-center\\\">Magic The Gathering</h4>\\n                <form class=\\\"form-control mt-4 mx-auto\\\" id=\\\"loginForm\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"email\\\">Email</label>\\n                        <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" aria-describedby=\\\"emailHelp\\\"\\n                            placeholder=\\\"Enter email\\\" (focus)=hideMSG()>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"password\\\">Password</label>\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" (focus)=hideMSG()>\\n                    </div>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"login()\\\">Login</button>\\n                    <span *ngIf=\\\"msg\\\" id=\\\"login_msg\\\" class=\\\"text-danger\\\">{{msg}}</span>\\n                </form>\\n            </div>\\n        </div>\\n    </div>      \\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, NavigationExtras } from '@angular/router'\nimport { LoginService } from '../../_sevice/login.service'\nimport { User } from 'src/app/_model/User';\n\ndeclare const $: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  @Input() email: string; password: string;\n  msg: string = null;\n  constructor(\n    private router: Router,\n    private loginService: LoginService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.loginService.login(this.email, this.password).subscribe(\n      res => {\n        let user = res.body;\n        this.loginService.setCSRFToken(res.headers.get('X-CSRF'));\n        if (user) {\n          this.loginService.setUser(user);\n          if (user.role == 'admin') {\n            this.router.navigate(['/admin']);\n          } else if (user.role == 'user') {\n            this.router.navigate(['/user']);\n          } else {\n            this.msg = 'incorrect email or password';\n          }\n        }\n        this.msg = 'incorrect email or password';\n      },\n      err => {\n        this.msg = 'incorrect email or password';\n      });\n\n  }\n  hideMSG() {\n    this.msg = null;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC91c2VyLWNhcmRzL3VzZXItY2FyZHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <!-- cards -->\\n  <div class=\\\"form-inline mt-5\\\">\\n    <div class=\\\"input-group\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <label class=\\\"input-group-text\\\">Name</label>\\n      </div>\\n      <input [(ngModel)]=\\\"name\\\" placeholder=\\\"name\\\" class=\\\"form-control\\\" />\\n    </div>\\n    <div class=\\\"input-group ml-1\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <label class=\\\"input-group-text\\\">Color</label>\\n      </div>\\n      <input [(ngModel)]=\\\"colors\\\" placeholder=\\\"color\\\" class=\\\"form-control\\\" />\\n    </div>\\n    <div class=\\\"input-group ml-1\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <label class=\\\"input-group-text\\\">Type</label>\\n      </div>\\n      <input [(ngModel)]=\\\"type\\\" placeholder=\\\"type\\\" class=\\\"form-control\\\" />\\n    </div>\\n    <div class=\\\"input-group ml-1\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <label class=\\\"input-group-text\\\">Set</label>\\n      </div>\\n      <input [(ngModel)]=\\\"set\\\" placeholder=\\\"set\\\" class=\\\"form-control\\\" />\\n    </div>\\n    <button class=\\\"btn btn-primary ml-3\\\" (click)=\\\"searchCards()\\\">Search</button>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-8\\\">\\n      <table class=\\\"table table-striped mt-2 shadow\\\" *ngIf=\\\"visible\\\">\\n        <thead class=\\\"table-secondary\\\">\\n          <tr>\\n            <th>Action</th>\\n            <th>Name</th>\\n            <th>Type</th>\\n            <th>Colors</th>\\n            <th>Set</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let card of cards\\\">\\n            <td class=\\\"text-center\\\"><button class=\\\"btn btn-sm btn-secondary\\\" title=\\\"add to deck\\\"\\n                (click)=\\\"toAdd = true;selectedCard = card ;selectedCardId = card.multiverseid \\\"> +\\n              </button></td>\\n            <td (click)=\\\"selectedCardId = card.multiverseid; toAdd = false\\\">{{card.name}}</td>\\n            <td (click)=\\\"selectedCardId = card.multiverseid; toAdd = false\\\">{{card.type}}</td>\\n            <td (click)=\\\"selectedCardId = card.multiverseid; toAdd = false\\\">{{card.colors[0]}}</td>\\n            <td (click)=\\\"selectedCardId = card.multiverseid; toAdd = false\\\">{{card.set}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <div *ngIf=\\\"!visible\\\" class=\\\"text-center mt-4\\\">\\n        <div class=\\\"spinner-grow text-info\\\" role=\\\"status\\\" style=\\\"width: 3rem; height: 3rem;\\\">\\n          <span class=\\\"sr-only\\\">Loading...</span>\\n        </div>\\n      </div>\\n      <div class=\\\"text-center\\\">\\n        <a>1 2 3 4 ...</a>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col\\\">\\n      <app-deck-list *ngIf=\\\"toAdd\\\" [selectedCard]=\\\"selectedCard\\\"></app-deck-list>\\n      <app-card-detail *ngIf=\\\"selectedCardId\\\" [selectedCardId]=\\\"selectedCardId\\\"></app-card-detail>\\n    </div>\\n  </div>\\n</div>\\n<div style=\\\"height:200px;\\\"></div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Card } from 'src/app/_model/Card';\nimport { UserService } from 'src/app/_sevice/user.service';\nimport { User } from 'src/app/_model/User';\nimport { LoginService } from 'src/app/_sevice/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-cards',\n  templateUrl: './user-cards.component.html',\n  styleUrls: ['./user-cards.component.css']\n})\nexport class UserCardsComponent implements OnInit {\n  cards: Card[] = null;\n  @Input() name: string = ''; type: string = ''; set: string = ''; colors: string = '';\n  page: number = 1;\n  selectedCardId: string = null;\n  user: User = null;\n  visible: boolean = false;\n  toAdd: boolean = false;\n  selectedCard: Card = null;\n\n  constructor(\n    private userService: UserService,\n    private loginService: LoginService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    let user : User= this.loginService.getUser();\n    if (user && user.role == 'user') {\n      this.user = user;\n    } else {\n      this.router.navigate(['/login']);\n      return;\n    }\n\n    if (this.user) {\n      this.userService.getCards(this.user._id, this.name, this.type, this.set, this.colors).subscribe(data => {\n        this.cards = data;\n        this.visible = true;\n      });\n    }\n  }\n\n  searchCards() {\n    this.visible = false;\n    this.userService.getCards(this.user._id, this.name, this.type, this.set, this.colors, this.page).subscribe(data => {\n      this.cards = data;\n      this.visible = true;\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC91c2VyLWRlY2tzL3VzZXItZGVja3MuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"form-inline mt-5\\\">\\n        <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <label class=\\\"input-group-text\\\">Name</label>\\n            </div>\\n            <input [(ngModel)]=\\\"deckName\\\" name=\\\"deckName\\\" placeholder=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n        </div>\\n\\n        <div class=\\\"input-group ml-2\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <label class=\\\"input-group-text\\\">Description</label>\\n            </div>\\n            <input [(ngModel)]=\\\"description\\\" class=\\\"form-control\\\" name=\\\"description\\\" placeholder=\\\"description\\\"\\n                type=\\\"text\\\" style=\\\"width:500px;\\\">\\n        </div>\\n        <button class=\\\"btn btn-primary ml-3\\\" (click)=\\\"createDeck()\\\">Create Deck</button>\\n    </div>\\n\\n    <table class=\\\"table table-striped mt-2 shadow\\\">\\n        <thead class=\\\"table-secondary\\\">\\n            <tr>\\n                <th>Name</th>\\n                <th>Description</th>\\n                <th>number of cards</th>\\n                <th>Action</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let deck of decks\\\">\\n                <td (click)=\\\"showDeck(deck.id)\\\">{{deck.name}}</td>\\n                <td (click)=\\\"showDeck(deck.id)\\\">{{deck.description}}</td>\\n                <td (click)=\\\"showDeck(deck.id)\\\">{{deck.cards.length}}</td>\\n                <td>\\n                    <div class=\\\"btn-group\\\">\\n                        <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteDeck(deck.id)\\\">Delete</button>\\n                    </div>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Deck } from 'src/app/_model/Deck';\nimport { UserService } from 'src/app/_sevice/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/_model/User';\nimport { LoginService } from 'src/app/_sevice/login.service';\n\n\n@Component({\n  selector: 'app-user-decks',\n  templateUrl: './user-decks.component.html',\n  styleUrls: ['./user-decks.component.css']\n})\nexport class UserDecksComponent implements OnInit {\n  decks: Deck[];\n  user: User;\n\n  @Input() deckName: string; description: string = '';\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private loginService: LoginService\n  ) {\n    let user : User= this.loginService.getUser();\n    if (user && user.role == 'user') {\n      this.user = user;\n    } else {\n      this.router.navigate(['/login']);\n      return;\n    }\n    this.userService.getDecks(this.user._id).subscribe(\n      decks => {\n        this.decks = decks;\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  createDeck() {\n    if (!this.deckName || this.deckName === '') {\n      alert('Empty name is not accepted');\n      return;\n    }\n    for (let i = 0; i < this.decks.length; i++) {\n      if (this.deckName == this.decks[i].name) {\n        alert('you cannot create two decks which have same name: \\'' + this.deckName + \"\\'\");\n        return;\n      }\n    }\n    this.userService.createDeck(this.user._id, this.deckName, this.description).subscribe(deck => {\n      this.refreshDecks();\n    })\n  }\n\n  refreshDecks() {\n    this.userService.getDecks(this.user._id).subscribe(\n      decks => {\n        this.decks = decks;\n      }\n    );\n  }\n\n  deleteDeck(deckId: string) {\n    let r = confirm(\"Are you sure to delete this deck?\");\n    if (r == true) {\n      this.userService.deleteDeck(this.user._id, deckId).subscribe(\n        _ => {\n          this.refreshDecks();\n        }\n      );\n    } else {\n    }\n  }\n\n  showDeck(dickId: string) {\n    this.router.navigate(['/user/decks/' + dickId]);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC91c2VyL3VzZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light shadow\\\">\\n    <a class=\\\"navbar-brand\\\"[routerLink]=\\\"[ '/user/cards']\\\" >Magic The Gathering</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\n        aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n        <ul class=\\\"navbar-nav mx-auto btn-group\\\">\\n            <button class=\\\"nav-link\\\" [routerLink]=\\\"['cards']\\\" class=\\\"btn btn-lg \\\">Cards</button>\\n            <button class=\\\"nav-link\\\" [routerLink]=\\\"['decks']\\\" class=\\\"btn btn-lg\\\">Decks</button>\\n        </ul>\\n        <div class=\\\"my-lg-0\\\">\\n            <a *ngIf=\\\"user\\\">User: {{user.firstName}} {{user.lastName}} </a>\\n            <button class=\\\"btn btn-outline-secondary my-2 my-sm-0 ml-2\\\" (click)=\\\"logout()\\\">Logout</button>\\n        </div>\\n    </div>\\n</nav>\\n<router-outlet></router-outlet>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router'\nimport { LoginService } from 'src/app/_sevice/login.service';\nimport { User } from 'src/app/_model/User';\nimport { Subscription } from 'rxjs';\nimport { routerNgProbeToken } from '@angular/router/src/router_module';\n\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\n\nexport class UserComponent implements OnInit {\n  user: User = null;\n\n  constructor(\n    private loginService: LoginService,\n    private router: Router,\n  ) {\n    let user : User= this.loginService.getUser();\n    if (user && user.role == 'user') {\n      this.user = user;\n    } else {\n      this.router.navigate(['/login']);\n      return;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.loginService.logout().subscribe(_ => {\n      this.router.navigate(['/login']);\n    });\n  }\n\n  getUser() {\n    // this.globals.setUser(new User());\n    // this.globals.user$.subscribe(user => {\n    //   this.user = user;\n    //   console.log(user);\n    // });\n    console.log(this.user);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}